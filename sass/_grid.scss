// Presetting grid
$module: 8px;
$column-gutter: 16px;
$column-counter: 12;
$column-width: 48px;
$container-width: 960px;
$column_response-step: 4;

// Responsive
$sm: 288px;
$md: 654px;
$lg: 976px;

// Susy Settings
$susy: (
    'columns': susy-repeat( $column-counter, $column-width ),
    'gutters': $column-gutter * 2,
    'spread': 'narrow',
    'container-spread': 'narrow',
);

/**
 * GRID COL
 * 
 * $num: [number] â€“ width of element (you may use 'susy-span' params from Susy, but it will not work correct
 * $container_type: [col|container|row]
 */
 @mixin grid-col( $num, $container_type: col ) {
    box-sizing: border-box;

    @if $container_type == 'container' {
        margin: auto;
        width: span( $num wide );
        @include breakpoint( $sm $md ) {
            width: span( ( $num - $column_response-step * 2) wide );
        }
        @include breakpoint( $md $lg ) {
            width: span( ( $num - $column_response-step ) wide );
        }
        clear: both;
        overflow: hidden;
    } @else if $container_type == 'col' {
        margin-left: $column-gutter;
        margin-right: $column-gutter;
        width: span( $num );
        float: left;
    } @else if $container_type == 'incontainer' {
        margin: auto;
        width: span( $num );
        @include breakpoint( $sm $md ) {
            width: span( ( $num - $column_response-step * 2) );
        }
        @include breakpoint( $md $lg ) {
            width: span( ( $num - $column_response-step ) );
        }
        clear: both;
        overflow: hidden;
    }
}